{"version":3,"sources":["react/logo.svg","react/App.js","reportWebVitals.js","index.js","shared/constants.js"],"names":["ipcRenderer","window","App","props","state","appName","appVersion","send","channels","APP_INFO","on","event","arg","removeAllListeners","setState","this","className","src","logo","alt","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4NAAe,MAA0B,iC,sBCIjCA,EAAgBC,OAAhBD,YA8BOE,E,kDA3Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,WAAY,IAEdN,EAAYO,KAAKC,WAASC,UAC1BT,EAAYU,GAAGF,WAASC,UAAU,SAACE,EAAOC,GACxCZ,EAAYa,mBAAmBL,WAASC,UACxC,IAAQJ,EAAwBO,EAAxBP,QAASC,EAAeM,EAAfN,WACjB,EAAKQ,SAAS,CAAET,UAASC,kBAVV,E,0CAanB,WACA,MAAgCS,KAAKX,MAA7BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WACjB,OACE,qBAAKU,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,8BAAId,EAAJ,YAAsBC,c,GApBZc,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,gBChBAc,EAAOC,QAAU,CACf7B,SAAU,CACRC,SAAU,e","file":"static/js/main.5bf868fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { channels } from '../shared/constants';\nconst { ipcRenderer } = window;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appName: '',\n      appVersion: '',\n    };\n    ipcRenderer.send(channels.APP_INFO);\n    ipcRenderer.on(channels.APP_INFO, (event, arg) => {\n      ipcRenderer.removeAllListeners(channels.APP_INFO);\n      const { appName, appVersion } = arg;\n      this.setState({ appName, appVersion });\n    });\n  }\n  render() {\n  const { appName, appVersion } = this.state;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{appName} version {appVersion}</p>\n      </header>\n    </div>\n  );\n}\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './react/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\n  channels: {\n    APP_INFO: 'app_info',\n  },\n};\n"],"sourceRoot":""}